name: CD for Hello World

on:
  push:
    tags:
      - 'v*'
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: 3.11.1
    - name: Install Libraries
      run: |
        pip install flake8 pytest pytest-cov
    - name: Checkout Own Repo
      uses: actions/checkout@v2
      with:
        repository: DevOps-Team3-2022/DevOps_Oct2022_Team3_Week4
    - name: list our contents
      run: |
        ls
    - name: test with pytest
      run: |
        pytest test.py -v -cov --junitxml=report.xml
    - if: ${{ failure() }}
      uses: JasonEtco/create-an-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        filename: .github/ISSUE_TEMPLATE.md
  
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/composite@v2
      if: always()
      with:
        junit_files: "report.xml"
        
    - name: Make directory
      run: mkdir -p path/to/artifact
      
    - name: Move file
      run: mv *.xml path/to/artifact/report.xml

    - uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: path/to/artifact/
    - uses: actions/download-artifact@v3
      with:
        name: my-artifact
    
    - name: Set environment version
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        
    - name: create release
      id: create-new-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: Release ${{env.RELEASE_VERSION }}
        prerelease: true
        
    - name: Archive content
      uses: thedoctor0/zip-release@master
      with:
        filename: files.zip
    - name: upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{ steps.create-new-release.outputs.upload_url }}
        asset_path: ./content.zip
        asset_name: ${{ env.RELEASE_VERSION }}.zip
        asset_content_type: applications/zip

    - name: Display structure of downloaded files
      run: ls -R
